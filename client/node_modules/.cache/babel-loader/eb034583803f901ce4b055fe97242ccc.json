{"ast":null,"code":"var _jsxFileName = \"/home/noor/study/crwn-clothing/src/pages/shop/shop.component.jsx\";\n// import { collection, doc, getFirestore, onSnapshot } from \"firebase/firestore\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\"; // import { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\"; // import {\n//   selectIsCollectionFetching,\n//   selectIsCollectionsLoaded,\n// } from \"../../redux/shop/shop.selectors\";\n// import CollectionPage from \"../collection/collection.component\";\n// import WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport CollectionsOverViewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPreviewContainer from \"../../components/collection-preview/collection-preview.container\"; // const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  // state = {\n  //   loading: true,\n  // };\n  // unsubscribeFromSnapshot = null;\n  async componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    await fetchCollectionsStartAsync(); // const { updateCollections } = this.props;\n    // const db = getFirestore();\n    // onSnapshot(collection(db, \"collections\"), (snapshot) => {\n    //   const collecttionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collecttionsMap);\n    //   this.setState({ loading: false });\n    // });\n    // collection(db, \"collections\").then(res => console.log(res,'reees'))\n  }\n\n  render() {\n    const {\n      match\n    } = this.props; // const { loading } = this.state;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverViewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPreviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({// isCollectionFetching : selectIsCollectionFetching,\n  // isCollectionsLoaded : selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/noor/study/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","CollectionsOverViewContainer","CollectionPreviewContainer","ShopPage","Component","componentDidMount","props","render","match","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CAEA;;AACA,SAASC,0BAAT,QAA2C,+BAA3C,C,CACA;AACA;AACA;AACA;AAEA;AACA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,0BAAP,MAAuC,kEAAvC,C,CAEA;;;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AACrC;AACA;AACA;AAEA;AAEuB,QAAjBC,iBAAiB,GAAG;AACxB,UAAM;AAAEL,MAAAA;AAAF,QAAiC,KAAKM,KAA5C;AACA,UAAMN,0BAA0B,EAAhC,CAFwB,CAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB,CADO,CAEP;;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,QAAA,SAAS,EAAER;AAHb;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBADtB;AAEE,QAAA,SAAS,EAAEP;AAFb;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AArCoC;;AAwCvC,MAAMQ,eAAe,GAAGX,wBAAwB,CAAC,CAC/C;AACA;AAF+C,CAAD,CAAhD;;AAKA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,0BAA0B,EAAE,MAAMY,QAAQ,CAACZ,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["// import { collection, doc, getFirestore, onSnapshot } from \"firebase/firestore\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\n// import { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\n// import {\n//   selectIsCollectionFetching,\n//   selectIsCollectionsLoaded,\n// } from \"../../redux/shop/shop.selectors\";\n\n// import CollectionPage from \"../collection/collection.component\";\n// import WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverViewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPreviewContainer from \"../../components/collection-preview/collection-preview.container\";\n\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  // state = {\n  //   loading: true,\n  // };\n\n  // unsubscribeFromSnapshot = null;\n\n  async componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    await fetchCollectionsStartAsync();\n    // const { updateCollections } = this.props;\n    // const db = getFirestore();\n    // onSnapshot(collection(db, \"collections\"), (snapshot) => {\n    //   const collecttionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collecttionsMap);\n    //   this.setState({ loading: false });\n    // });\n    // collection(db, \"collections\").then(res => console.log(res,'reees'))\n  }\n\n  render() {\n    const { match } = this.props;\n    // const { loading } = this.state;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverViewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPreviewContainer}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  // isCollectionFetching : selectIsCollectionFetching,\n  // isCollectionsLoaded : selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}