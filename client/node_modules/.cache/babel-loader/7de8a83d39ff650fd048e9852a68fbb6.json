{"ast":null,"code":"var _jsxFileName = \"/home/noor/study/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport { collection, doc, getFirestore, onSnapshot } from \"firebase/firestore\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport CollectionOverView from \"../../components/collections-overview/collections-overview.component\";\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const db = getFirestore();\n    onSnapshot(collection(db, \"collections\"), snapshot => {\n      const collecttionsMap = convertCollectionsSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collecttionsMap => dis\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/noor/study/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["collection","doc","getFirestore","onSnapshot","React","Route","connect","CollectionOverView","convertCollectionsSnapshotToMap","CollectionPage","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","db","snapshot","collecttionsMap","render","match","props","path","mapDispatchToProps","dispatch","updateCollections","dis"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,YAA1B,EAAwCC,UAAxC,QAA0D,oBAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,SAASC,+BAAT,QAAgD,+BAAhD;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,EAAE,GAAGZ,YAAY,EAAvB;AACAC,IAAAA,UAAU,CAACH,UAAU,CAACc,EAAD,EAAK,aAAL,CAAX,EAAiCC,QAAD,IAAc;AACtD,YAAMC,eAAe,GAAGR,+BAA+B,CAACO,QAAD,CAAvD;AACH,KAFW,CAAV;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEb;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEW,KAAK,CAACE,IAAK,gBADtB;AAEE,QAAA,SAAS,EAAEX;AAFb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAtBoC;;AAyBvC,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,iBAAiB,EAAEP,eAAe,IAAIQ;AADA,CAAL,CAAnC;;AAIA,eAAed,QAAf","sourcesContent":["import { collection, doc, getFirestore, onSnapshot } from \"firebase/firestore\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport { connect } from \"react-redux\";\n\nimport CollectionOverView from \"../../components/collections-overview/collections-overview.component\";\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport CollectionPage from \"../collection/collection.component\";\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const db = getFirestore();\n    onSnapshot(collection(db, \"collections\"), (snapshot) => {\n      const collecttionsMap = convertCollectionsSnapshotToMap(snapshot);\n  });\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverView} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collecttionsMap => dis\n})\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}